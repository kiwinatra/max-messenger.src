package defpackage;

import java.util.LinkedHashMap;

/* renamed from: x03  reason: default package */
public final class x03 {
    public static final cx4 b = new cx4(15);
    public static final LinkedHashMap c = new LinkedHashMap();
    public static final x03 d;
    public static final x03 e;
    public static final x03 f;
    public static final x03 g;
    public static final x03 h;
    public static final x03 i;
    public static final x03 j;
    public static final x03 k;
    public static final x03 l;
    public static final x03 m;
    public static final x03 n;
    public static final x03 o;
    public static final x03 p;
    public static final x03 q;
    public static final x03 r;
    public static final x03 s;
    public static final o9a t;
    public final String a;

    static {
        o9a o9a = new o9a(9);
        t = o9a;
        o9a.d(o9a, "SSL_RSA_WITH_NULL_MD5");
        o9a.d(o9a, "SSL_RSA_WITH_NULL_SHA");
        o9a.d(o9a, "SSL_RSA_EXPORT_WITH_RC4_40_MD5");
        o9a.d(o9a, "SSL_RSA_WITH_RC4_128_MD5");
        o9a.d(o9a, "SSL_RSA_WITH_RC4_128_SHA");
        o9a.d(o9a, "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA");
        o9a.d(o9a, "SSL_RSA_WITH_DES_CBC_SHA");
        d = o9a.d(o9a, "SSL_RSA_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
        o9a.d(o9a, "SSL_DHE_DSS_WITH_DES_CBC_SHA");
        o9a.d(o9a, "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA");
        o9a.d(o9a, "SSL_DHE_RSA_WITH_DES_CBC_SHA");
        o9a.d(o9a, "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "SSL_DH_anon_EXPORT_WITH_RC4_40_MD5");
        o9a.d(o9a, "SSL_DH_anon_WITH_RC4_128_MD5");
        o9a.d(o9a, "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA");
        o9a.d(o9a, "SSL_DH_anon_WITH_DES_CBC_SHA");
        o9a.d(o9a, "SSL_DH_anon_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "TLS_KRB5_WITH_DES_CBC_SHA");
        o9a.d(o9a, "TLS_KRB5_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "TLS_KRB5_WITH_RC4_128_SHA");
        o9a.d(o9a, "TLS_KRB5_WITH_DES_CBC_MD5");
        o9a.d(o9a, "TLS_KRB5_WITH_3DES_EDE_CBC_MD5");
        o9a.d(o9a, "TLS_KRB5_WITH_RC4_128_MD5");
        o9a.d(o9a, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA");
        o9a.d(o9a, "TLS_KRB5_EXPORT_WITH_RC4_40_SHA");
        o9a.d(o9a, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5");
        o9a.d(o9a, "TLS_KRB5_EXPORT_WITH_RC4_40_MD5");
        e = o9a.d(o9a, "TLS_RSA_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_DH_anon_WITH_AES_128_CBC_SHA");
        f = o9a.d(o9a, "TLS_RSA_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_DH_anon_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_RSA_WITH_NULL_SHA256");
        o9a.d(o9a, "TLS_RSA_WITH_AES_128_CBC_SHA256");
        o9a.d(o9a, "TLS_RSA_WITH_AES_256_CBC_SHA256");
        o9a.d(o9a, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256");
        o9a.d(o9a, "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256");
        o9a.d(o9a, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256");
        o9a.d(o9a, "TLS_DH_anon_WITH_AES_128_CBC_SHA256");
        o9a.d(o9a, "TLS_DH_anon_WITH_AES_256_CBC_SHA256");
        o9a.d(o9a, "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA");
        o9a.d(o9a, "TLS_PSK_WITH_RC4_128_SHA");
        o9a.d(o9a, "TLS_PSK_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "TLS_PSK_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_PSK_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_RSA_WITH_SEED_CBC_SHA");
        g = o9a.d(o9a, "TLS_RSA_WITH_AES_128_GCM_SHA256");
        h = o9a.d(o9a, "TLS_RSA_WITH_AES_256_GCM_SHA384");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384");
        o9a.d(o9a, "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256");
        o9a.d(o9a, "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384");
        o9a.d(o9a, "TLS_DH_anon_WITH_AES_128_GCM_SHA256");
        o9a.d(o9a, "TLS_DH_anon_WITH_AES_256_GCM_SHA384");
        o9a.d(o9a, "TLS_EMPTY_RENEGOTIATION_INFO_SCSV");
        o9a.d(o9a, "TLS_FALLBACK_SCSV");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_NULL_SHA");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_RC4_128_SHA");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_NULL_SHA");
        o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA");
        o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_NULL_SHA");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_RC4_128_SHA");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_ECDHE_RSA_WITH_NULL_SHA");
        o9a.d(o9a, "TLS_ECDHE_RSA_WITH_RC4_128_SHA");
        o9a.d(o9a, "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA");
        i = o9a.d(o9a, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA");
        j = o9a.d(o9a, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_ECDH_anon_WITH_NULL_SHA");
        o9a.d(o9a, "TLS_ECDH_anon_WITH_RC4_128_SHA");
        o9a.d(o9a, "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA");
        o9a.d(o9a, "TLS_ECDH_anon_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_ECDH_anon_WITH_AES_256_CBC_SHA");
        o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256");
        o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384");
        o9a.d(o9a, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256");
        o9a.d(o9a, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384");
        k = o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256");
        l = o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256");
        o9a.d(o9a, "TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384");
        m = o9a.d(o9a, "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256");
        n = o9a.d(o9a, "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256");
        o9a.d(o9a, "TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384");
        o9a.d(o9a, "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA");
        o9a.d(o9a, "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA");
        o = o9a.d(o9a, "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
        p = o9a.d(o9a, "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256");
        o9a.d(o9a, "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
        o9a.d(o9a, "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256");
        q = o9a.d(o9a, "TLS_AES_128_GCM_SHA256");
        r = o9a.d(o9a, "TLS_AES_256_GCM_SHA384");
        s = o9a.d(o9a, "TLS_CHACHA20_POLY1305_SHA256");
        o9a.d(o9a, "TLS_AES_128_CCM_SHA256");
        o9a.d(o9a, "TLS_AES_128_CCM_8_SHA256");
    }

    public x03(String str) {
        this.a = str;
    }

    public final String toString() {
        return this.a;
    }
}
