package defpackage;

import java.util.Arrays;
import java.util.HashMap;
import kotlin.jvm.internal.IntCompanionObject;

/* renamed from: kj3  reason: default package */
public final class kj3 {
    public int a;
    public final nj3 b;
    public final mj3 c;
    public final lj3 d;
    public final oj3 e;
    public HashMap f = new HashMap();

    /* JADX WARNING: type inference failed for: r0v0, types: [nj3, java.lang.Object] */
    /* JADX WARNING: type inference failed for: r0v1, types: [mj3, java.lang.Object] */
    /* JADX WARNING: type inference failed for: r0v2, types: [lj3, java.lang.Object] */
    /* JADX WARNING: type inference failed for: r0v3, types: [oj3, java.lang.Object] */
    public kj3() {
        ? obj = new Object();
        obj.a = 0;
        obj.b = 0;
        obj.c = 1.0f;
        obj.d = Float.NaN;
        this.b = obj;
        ? obj2 = new Object();
        obj2.a = -1;
        obj2.b = 0;
        obj2.c = -1;
        obj2.d = Float.NaN;
        obj2.e = Float.NaN;
        obj2.f = Float.NaN;
        obj2.g = -1;
        obj2.h = null;
        obj2.i = -1;
        this.c = obj2;
        ? obj3 = new Object();
        obj3.a = false;
        obj3.d = -1;
        obj3.e = -1;
        obj3.f = -1.0f;
        obj3.g = true;
        obj3.h = -1;
        obj3.i = -1;
        obj3.j = -1;
        obj3.k = -1;
        obj3.l = -1;
        obj3.m = -1;
        obj3.n = -1;
        obj3.o = -1;
        obj3.p = -1;
        obj3.q = -1;
        obj3.r = -1;
        obj3.s = -1;
        obj3.t = -1;
        obj3.u = -1;
        obj3.v = -1;
        obj3.w = 0.5f;
        obj3.x = 0.5f;
        obj3.y = null;
        obj3.z = -1;
        obj3.A = 0;
        obj3.B = c44.DEFAULT_ASPECT_RATIO;
        obj3.C = -1;
        obj3.D = -1;
        obj3.E = -1;
        obj3.F = 0;
        obj3.G = 0;
        obj3.H = 0;
        obj3.I = 0;
        obj3.J = 0;
        obj3.K = 0;
        obj3.L = 0;
        obj3.M = IntCompanionObject.MIN_VALUE;
        obj3.N = IntCompanionObject.MIN_VALUE;
        obj3.O = IntCompanionObject.MIN_VALUE;
        obj3.P = IntCompanionObject.MIN_VALUE;
        obj3.Q = IntCompanionObject.MIN_VALUE;
        obj3.R = IntCompanionObject.MIN_VALUE;
        obj3.S = IntCompanionObject.MIN_VALUE;
        obj3.T = -1.0f;
        obj3.U = -1.0f;
        obj3.V = 0;
        obj3.W = 0;
        obj3.X = 0;
        obj3.Y = 0;
        obj3.Z = 0;
        obj3.a0 = 0;
        obj3.b0 = 0;
        obj3.c0 = 0;
        obj3.d0 = 1.0f;
        obj3.e0 = 1.0f;
        obj3.f0 = -1;
        obj3.g0 = 0;
        obj3.h0 = -1;
        obj3.l0 = false;
        obj3.m0 = false;
        obj3.n0 = true;
        obj3.o0 = 0;
        this.d = obj3;
        ? obj4 = new Object();
        obj4.a = c44.DEFAULT_ASPECT_RATIO;
        obj4.b = c44.DEFAULT_ASPECT_RATIO;
        obj4.c = c44.DEFAULT_ASPECT_RATIO;
        obj4.d = 1.0f;
        obj4.e = 1.0f;
        obj4.f = Float.NaN;
        obj4.g = Float.NaN;
        obj4.h = -1;
        obj4.i = c44.DEFAULT_ASPECT_RATIO;
        obj4.j = c44.DEFAULT_ASPECT_RATIO;
        obj4.k = c44.DEFAULT_ASPECT_RATIO;
        obj4.l = false;
        obj4.m = c44.DEFAULT_ASPECT_RATIO;
        this.e = obj4;
    }

    public final void a(fj3 fj3) {
        lj3 lj3 = this.d;
        fj3.e = lj3.h;
        fj3.f = lj3.i;
        fj3.g = lj3.j;
        fj3.h = lj3.k;
        fj3.i = lj3.l;
        fj3.j = lj3.m;
        fj3.k = lj3.n;
        fj3.l = lj3.o;
        fj3.m = lj3.p;
        fj3.n = lj3.q;
        fj3.o = lj3.r;
        fj3.s = lj3.s;
        fj3.t = lj3.t;
        fj3.u = lj3.u;
        fj3.v = lj3.v;
        fj3.leftMargin = lj3.F;
        fj3.rightMargin = lj3.G;
        fj3.topMargin = lj3.H;
        fj3.bottomMargin = lj3.I;
        fj3.A = lj3.R;
        fj3.B = lj3.Q;
        fj3.x = lj3.N;
        fj3.z = lj3.P;
        fj3.E = lj3.w;
        fj3.F = lj3.x;
        fj3.p = lj3.z;
        fj3.q = lj3.A;
        fj3.r = lj3.B;
        fj3.G = lj3.y;
        fj3.T = lj3.C;
        fj3.U = lj3.D;
        fj3.I = lj3.T;
        fj3.H = lj3.U;
        fj3.K = lj3.W;
        fj3.J = lj3.V;
        fj3.W = lj3.l0;
        fj3.X = lj3.m0;
        fj3.L = lj3.X;
        fj3.M = lj3.Y;
        fj3.P = lj3.Z;
        fj3.Q = lj3.a0;
        fj3.N = lj3.b0;
        fj3.O = lj3.c0;
        fj3.R = lj3.d0;
        fj3.S = lj3.e0;
        fj3.V = lj3.E;
        fj3.c = lj3.f;
        fj3.a = lj3.d;
        fj3.b = lj3.e;
        fj3.width = lj3.b;
        fj3.height = lj3.c;
        String str = lj3.k0;
        if (str != null) {
            fj3.Y = str;
        }
        fj3.Z = lj3.o0;
        fj3.setMarginStart(lj3.K);
        fj3.setMarginEnd(lj3.J);
        fj3.a();
    }

    public final Object clone() {
        kj3 kj3 = new kj3();
        lj3 lj3 = kj3.d;
        lj3.getClass();
        lj3 lj32 = this.d;
        lj3.a = lj32.a;
        lj3.b = lj32.b;
        lj3.c = lj32.c;
        lj3.d = lj32.d;
        lj3.e = lj32.e;
        lj3.f = lj32.f;
        lj3.g = lj32.g;
        lj3.h = lj32.h;
        lj3.i = lj32.i;
        lj3.j = lj32.j;
        lj3.k = lj32.k;
        lj3.l = lj32.l;
        lj3.m = lj32.m;
        lj3.n = lj32.n;
        lj3.o = lj32.o;
        lj3.p = lj32.p;
        lj3.q = lj32.q;
        lj3.r = lj32.r;
        lj3.s = lj32.s;
        lj3.t = lj32.t;
        lj3.u = lj32.u;
        lj3.v = lj32.v;
        lj3.w = lj32.w;
        lj3.x = lj32.x;
        lj3.y = lj32.y;
        lj3.z = lj32.z;
        lj3.A = lj32.A;
        lj3.B = lj32.B;
        lj3.C = lj32.C;
        lj3.D = lj32.D;
        lj3.E = lj32.E;
        lj3.F = lj32.F;
        lj3.G = lj32.G;
        lj3.H = lj32.H;
        lj3.I = lj32.I;
        lj3.J = lj32.J;
        lj3.K = lj32.K;
        lj3.L = lj32.L;
        lj3.M = lj32.M;
        lj3.N = lj32.N;
        lj3.O = lj32.O;
        lj3.P = lj32.P;
        lj3.Q = lj32.Q;
        lj3.R = lj32.R;
        lj3.S = lj32.S;
        lj3.T = lj32.T;
        lj3.U = lj32.U;
        lj3.V = lj32.V;
        lj3.W = lj32.W;
        lj3.X = lj32.X;
        lj3.Y = lj32.Y;
        lj3.Z = lj32.Z;
        lj3.a0 = lj32.a0;
        lj3.b0 = lj32.b0;
        lj3.c0 = lj32.c0;
        lj3.d0 = lj32.d0;
        lj3.e0 = lj32.e0;
        lj3.f0 = lj32.f0;
        lj3.g0 = lj32.g0;
        lj3.h0 = lj32.h0;
        lj3.k0 = lj32.k0;
        int[] iArr = lj32.i0;
        if (iArr == null || lj32.j0 != null) {
            lj3.i0 = null;
        } else {
            lj3.i0 = Arrays.copyOf(iArr, iArr.length);
        }
        lj3.j0 = lj32.j0;
        lj3.l0 = lj32.l0;
        lj3.m0 = lj32.m0;
        lj3.n0 = lj32.n0;
        lj3.o0 = lj32.o0;
        mj3 mj3 = kj3.c;
        mj3.getClass();
        mj3 mj32 = this.c;
        mj32.getClass();
        mj3.a = mj32.a;
        mj3.c = mj32.c;
        mj3.e = mj32.e;
        mj3.d = mj32.d;
        nj3 nj3 = kj3.b;
        nj3.getClass();
        nj3 nj32 = this.b;
        nj32.getClass();
        nj3.a = nj32.a;
        nj3.c = nj32.c;
        nj3.d = nj32.d;
        nj3.b = nj32.b;
        oj3 oj3 = kj3.e;
        oj3.getClass();
        oj3 oj32 = this.e;
        oj32.getClass();
        oj3.a = oj32.a;
        oj3.b = oj32.b;
        oj3.c = oj32.c;
        oj3.d = oj32.d;
        oj3.e = oj32.e;
        oj3.f = oj32.f;
        oj3.g = oj32.g;
        oj3.h = oj32.h;
        oj3.i = oj32.i;
        oj3.j = oj32.j;
        oj3.k = oj32.k;
        oj3.l = oj32.l;
        oj3.m = oj32.m;
        kj3.a = this.a;
        return kj3;
    }
}
